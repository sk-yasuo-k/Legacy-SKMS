<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
version="2.4">
    <display-name>Skms</display-name>
    <description>Application with Skms</description>

    <context-param>
        <param-name>flex.class.path</param-name>
        <param-value>/WEB-INF/flex/hotfixes</param-value>
    </context-param>

    <!-- Http Flex Session attribute and binding listener support -->
    <listener>
        <listener-class>flex.messaging.HttpFlexSession</listener-class>
    </listener>

    <filter>
        <filter-name>encodingfilter</filter-name>
        <filter-class>org.seasar.extension.filter.EncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>requestDumpFilter</filter-name>
        <filter-class>org.seasar.extension.filter.RequestDumpFilter</filter-class>
    </filter>

    <filter>
        <filter-name>s2filter</filter-name>
        <filter-class>org.seasar.framework.container.filter.S2ContainerFilter</filter-class>
    </filter>

    <filter>
        <filter-name>hotdeployfilter</filter-name>
        <filter-class>org.seasar.framework.container.hotdeploy.HotdeployFilter</filter-class>
    </filter>

    <filter>
        <filter-name>routingfilter</filter-name>
        <filter-class>org.seasar.struts.filter.RoutingFilter</filter-class>
        <init-param>
            <param-name>jspDirectAccess</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingfilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>s2filter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>hotdeployfilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>routingfilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>requestDumpFilter</filter-name>
        <url-pattern>*.do</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <servlet>
        <servlet-name>action</servlet-name>
        <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
        <init-param>
            <param-name>config</param-name>
            <param-value>/WEB-INF/struts-config.xml</param-value>
        </init-param>
        <init-param>
            <param-name>configFactory</param-name>
            <param-value>org.seasar.struts.config.S2ModuleConfigFactory</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>s2container</servlet-name>
        <servlet-class>org.seasar.framework.container.servlet.S2ContainerServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>

	<!-- 取引先ファイルアップロード＆ダウンロード -->
	<servlet>
		<servlet-name>CustomerFileUpload</servlet-name>
		<servlet-class>servlet.customer.CustomerFileUpload</servlet-class>
	</servlet>
    <servlet-mapping>
    	<servlet-name>CustomerFileUpload</servlet-name>
    	<url-pattern>/fileUpload</url-pattern>
    </servlet-mapping>

	<servlet>
		<servlet-name>CustomerFileDownload</servlet-name>
		<servlet-class>servlet.customer.CustomerFileDownload</servlet-class>
	</servlet>
    <servlet-mapping>
    	<servlet-name>CustomerFileDownload</servlet-name>
    	<url-pattern>/fileDownload</url-pattern>
    </servlet-mapping>

	<!-- 勤務管理表ファイルインポート＆エクスポート -->
	<servlet>
		<servlet-name>WorkingHoursFileImport</servlet-name>
		<servlet-class>servlet.generalAffair.WorkingHoursFileImport</servlet-class>
	</servlet>
    <servlet-mapping>
    	<servlet-name>WorkingHoursFileImport</servlet-name>
    	<url-pattern>/workingHoursFileImport</url-pattern>
    </servlet-mapping>

	<servlet>
		<servlet-name>WorkingHoursFileExport</servlet-name>
		<servlet-class>servlet.generalAffair.WorkingHoursFileExport</servlet-class>
	</servlet>
    <servlet-mapping>
    	<servlet-name>WorkingHoursFileExport</servlet-name>
    	<url-pattern>/workingHoursFileExport</url-pattern>
    </servlet-mapping>

	<!-- 業務経歴ファイルインポート＆エクスポート -->
	<servlet>
		<servlet-name>SkillSheetFileImport</servlet-name>
		<servlet-class>servlet.personnelAffair.skill.SkillSheetFileImport</servlet-class>
	</servlet>
    <servlet-mapping>
    	<servlet-name>SkillSheetFileImport</servlet-name>
    	<url-pattern>/skillSheetFileImport</url-pattern>
    </servlet-mapping>

	<servlet>
		<servlet-name>SkillSheetFileExport</servlet-name>
		<servlet-class>servlet.personnelAffair.skill.SkillSheetFileExport</servlet-class>
	</servlet>
    <servlet-mapping>
    	<servlet-name>SkillSheetFileExport</servlet-name>
    	<url-pattern>/skillSheetFileExport</url-pattern>
    </servlet-mapping>

	<!-- 勤務状況集計結果ファイル出力 -->
	<servlet>
		<servlet-name>WorkingConditionsCsvFileExport</servlet-name>
		<servlet-class>servlet.generalAffair.workingConditions.WorkingConditionsCsvFileExport</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>WorkingConditionsCsvFileExport</servlet-name>
		<url-pattern>/workingConditionsCsvFileExport</url-pattern>
	</servlet-mapping>

    <!-- MessageBroker Servlet -->
    <servlet>
        <servlet-name>MessageBrokerServlet</servlet-name>
        <display-name>MessageBrokerServlet</display-name>
        <servlet-class>flex.messaging.MessageBrokerServlet</servlet-class>
        <init-param>
            <param-name>services.configuration.file</param-name>
            <param-value>/WEB-INF/flex/services-config.xml</param-value>
        </init-param>
        <load-on-startup>3</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>action</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>s2container</servlet-name>
        <url-pattern>/s2container</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>MessageBrokerServlet</servlet-name>
        <url-pattern>/messagebroker/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error/debug.jsp</location>
    </error-page>

    <!-- for WebSphere deployment, please uncomment -->
    <!--
    <resource-ref>
       <description>Flex Messaging WorkManager</description>
        <res-ref-name>wm/MessagingWorkManager</res-ref-name>
        <res-type>com.ibm.websphere.asynchbeans.WorkManager</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
    </resource-ref>
    -->

    <!--
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Protected Sample</web-resource-name>

            <url-pattern>/messagebroker/amf/SampleSalaryRO</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>

        <auth-constraint>
            <role-name>sampleusers</role-name>
        </auth-constraint>
    </security-constraint>
    -->

    <login-config>
        <auth-method>BASIC</auth-method>
    </login-config>

    <!--
    <security-role>
        <role-name>sampleusers</role-name>
    </security-role>
    -->
    <!--
    <jsp-config>
    	<jsp-property-group>
    		<url-pattern>*.jsp</url-pattern>
    		<el-ignored>false</el-ignored>
    		<page-encoding>UTF-8</page-encoding>
    		<scripting-invalid>false</scripting-invalid>
    		<include-prelude>/common/common.jsp</include-prelude>
    	</jsp-property-group>
    </jsp-config>
    -->
</web-app>
